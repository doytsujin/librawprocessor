# Makefile for librawprocessor for Mac OS X.
# (C)2016 Raphael Kim / rageworx@gmail.com
#

#########################################################################
#
# This Makefile for General Linux GCC
#
#########################################################################

# Compiler configure.
CCPATH =
GCC = ${CCPATH}gcc
GPP = ${CCPATH}g++
AR  = ${CCPATH}ar

# Sources and how it built
# Optimization issue: recommend to build with using -ffast-math option.
# Change if your CPU architecture supports more high technologies.
SOURCEDIR = ./src
OBJDIR    = ./obj/Release
OUTBIN    = librawprocessor.a
OUTDIR    = ./lib
DEFINEOPT = -DRAWPROCESSOR_USE_LOCALTCHAR
OPTIMIZEOPT = -fopenmp -ffast-math -O3 -s
CPUARCHOPT    = -mavx

ifeq (debug,$(firstword $(MAKECMDGOALS)))
	DEFINEOPT += -DDEBUG
	OUTBIN = librawprocessor_d.a
endif

CFLAGS    = -I$(SOURCEDIR) $(DEFINEOPT) $(OPTIMIZEOPT) $(CPUARCHOPT) $(BITSOPT)

all: prepare clean ${OUTDIR}/${OUTBIN}

64bit: all
openmp: all
debug: all

prepare:
	@mkdir -p ${OBJDIR}
	@mkdir -p ${OUTDIR}

${OBJDIR}/stdunicode.o:
	@$(GPP) -c ${SOURCEDIR}/stdunicode.cpp ${CFLAGS} -o $@

${OBJDIR}/rawscale.o:
	@$(GPP) -c ${SOURCEDIR}/rawscale.cpp ${CFLAGS} -o $@

${OBJDIR}/rawprocessor.o:
	@$(GPP) -c ${SOURCEDIR}/rawprocessor.cpp ${CFLAGS} -o $@

${OBJDIR}/rawfilters.o:
	@$(GPP) -c ${SOURCEDIR}/rawfilters.cpp ${CFLAGS} -o $@
	
${OBJDIR}/rawimgtk.o:
	@$(GPP) -c ${SOURCEDIR}/rawimgtk.cpp ${CFLAGS} -o $@

${OBJDIR}/rawimgtk_tmodrago03.o:
	@$(GPP) -c ${SOURCEDIR}/rawimgtk_tmodrago03.cpp ${CFLAGS} -o $@

${OBJDIR}/rawimgtk_tmoreinhard05.o:
	@$(GPP) -c ${SOURCEDIR}/rawimgtk_tmoreinhard05.cpp ${CFLAGS} -o $@

${OBJDIR}/clahe.o:
	@$(GCC) -c ${SOURCEDIR}/clahe.c ${CFLGAS} -o $@


${OUTDIR}/${OUTBIN}: ${OBJDIR}/rawscale.o \
					 ${OBJDIR}/stdunicode.o \
					 ${OBJDIR}/rawimgtk.o \
					 ${OBJDIR}/rawimgtk_tmodrago03.o \
					 ${OBJDIR}/rawimgtk_tmoreinhard05.o \
					 ${OBJDIR}/rawfilters.o \
					 ${OBJDIR}/clahe.o \
					 ${OBJDIR}/rawprocessor.o
	@echo "Generating $@ ..."
	@$(AR) -q $@ ${OBJDIR}/*.o
	@cp -f ${SOURCEDIR}/rawprocessor.h ${OUTDIR}

clean:
	@echo "Cleaning built directories ..."
	@rm -rf ${OBJDIR}/*
	@rm -rf ${OUTDIR}/${OUTBIN}
